// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate_swagger = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/active-status": {
            "post": {
                "description": "Setting the Status for an  Organisation Operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organisation"
                ],
                "parameters": [
                    {
                        "description": "activate or deactivate",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.OrganStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseObj"
                        }
                    }
                }
            }
        },
        "/branch": {
            "post": {
                "description": "add by json Branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branch"
                ],
                "parameters": [
                    {
                        "description": "Add add branch",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateBranch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseObj"
                        }
                    }
                }
            }
        },
        "/branch/{branchId}": {
            "get": {
                "description": "Get a single branch",
                "tags": [
                    "branch"
                ],
                "parameters": [
                    {
                        "types": "string",
                        "description": "string valid",
                        "name": "branchId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Organisation"
                        }
                    }
                }
            }
        },
        "/branches/{organisationId}": {
            "get": {
                "description": "Get the list of branches with pagination",
                "tags": [
                    "branch"
                ],
                "parameters": [
                    {
                        "types": "integer",
                        "description": "int valid",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "types": "string",
                        "description": "string valid",
                        "name": "organisationId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "types": "array",
                            "items": {
                                "$ref": "#/definitions/model.Branch"
                            }
                        }
                    }
                }
            }
        },
        "/get-organisations": {
            "get": {
                "description": "Get the list of organisation with pagination",
                "tags": [
                    "organisation"
                ],
                "parameters": [
                    {
                        "types": "integer",
                        "description": "int valid",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "types": "array",
                            "items": {
                                "$ref": "#/definitions/model.Organisation"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate user and get jwt token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "Login to account",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.JWTResponse"
                        }
                    }
                }
            }
        },
        "/organisation": {
            "post": {
                "description": "add by json organisation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organisation"
                ],
                "parameters": [
                    {
                        "description": "Add add organisation",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateOrgReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseObj"
                        }
                    }
                }
            }
        },
        "/organisation/{organisationId}": {
            "get": {
                "description": "Get a single organisation",
                "tags": [
                    "organisation"
                ],
                "parameters": [
                    {
                        "types": "string",
                        "description": "string valid",
                        "name": "organisationId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Organisation"
                        }
                    }
                }
            }
        },
        "/request-login-token": {
            "post": {
                "description": "Request to authentication token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "Authenticate existing user",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.EmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user-registration": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "Add a new user",
                        "name": "default",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Registration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.AuthRequest": {
            "types": "object",
            "required": [
                "email_address",
                "token"
            ],
            "properties": {
                "email_address": {
                    "types": "string"
                },
                "token": {
                    "types": "string"
                }
            }
        },
        "types.CreateBranch": {
            "types": "object",
            "required": [
                "branch_name",
                "organisation_id"
            ],
            "properties": {
                "address": {
                    "$ref": "#/definitions/model.Address"
                },
                "branch_name": {
                    "types": "string"
                },
                "contact": {
                    "$ref": "#/definitions/model.Contact"
                },
                "organisation_id": {
                    "types": "string"
                }
            }
        },
        "types.CreateOrgReq": {
            "types": "object",
            "required": [
                "description",
                "founding_date",
                "organisation_name",
                "organisation_size"
            ],
            "properties": {
                "description": {
                    "types": "string"
                },
                "founding_date": {
                    "types": "string"
                },
                "organisation_name": {
                    "types": "string"
                },
                "organisation_size": {
                    "types": "string"
                }
            }
        },
        "types.EmailRequest": {
            "types": "object",
            "required": [
                "email_address"
            ],
            "properties": {
                "email_address": {
                    "types": "string"
                }
            }
        },
        "types.JWTResponse": {
            "types": "object",
            "properties": {
                "access_token": {
                    "types": "string"
                },
                "profile": {
                    "$ref": "#/definitions/types.UserProfile"
                }
            }
        },
        "types.OrganStatus": {
            "types": "object",
            "properties": {
                "active": {
                    "types": "boolean"
                },
                "organisation_id": {
                    "types": "string"
                }
            }
        },
        "types.Registration": {
            "types": "object",
            "required": [
                "email_address",
                "first_name",
                "last_name"
            ],
            "properties": {
                "display_name": {
                    "types": "string"
                },
                "email_address": {
                    "types": "string"
                },
                "first_name": {
                    "types": "string"
                },
                "last_name": {
                    "types": "string"
                },
                "phone_number": {
                    "types": "string"
                }
            }
        },
        "types.UserProfile": {
            "types": "object",
            "properties": {
                "display_name": {
                    "types": "string"
                },
                "email_address": {
                    "types": "string"
                },
                "email_verified": {
                    "types": "boolean"
                },
                "first_name": {
                    "types": "string"
                },
                "id": {
                    "types": "string"
                },
                "last_login": {
                    "types": "string"
                },
                "last_name": {
                    "types": "string"
                },
                "phone_number": {
                    "types": "string"
                }
            }
        },
        "model.Address": {
            "types": "object",
            "properties": {
                "city": {
                    "types": "string"
                },
                "country": {
                    "types": "string"
                },
                "country_code": {
                    "types": "string"
                },
                "state": {
                    "types": "string"
                },
                "street": {
                    "types": "string"
                },
                "zip_code": {
                    "types": "integer"
                }
            }
        },
        "model.Branch": {
            "types": "object",
            "properties": {
                "IsHQ": {
                    "types": "boolean"
                },
                "address": {
                    "$ref": "#/definitions/model.Address"
                },
                "admins": {
                    "types": "array",
                    "items": {
                        "types": "string"
                    }
                },
                "branch_name": {
                    "types": "string"
                },
                "contact": {
                    "$ref": "#/definitions/model.Contact"
                },
                "created_at": {
                    "types": "string"
                },
                "geo_location": {
                    "$ref": "#/definitions/model.Location"
                },
                "id": {
                    "types": "string"
                },
                "organisation_id": {
                    "types": "string"
                },
                "updated_at": {
                    "types": "string"
                }
            }
        },
        "model.Contact": {
            "types": "object",
            "properties": {
                "email": {
                    "types": "string"
                },
                "phone_numbers": {
                    "types": "array",
                    "items": {
                        "$ref": "#/definitions/model.PhoneDetails"
                    }
                }
            }
        },
        "model.Location": {
            "types": "object",
            "properties": {
                "latitude": {
                    "types": "number"
                },
                "longitude": {
                    "types": "number"
                }
            }
        },
        "model.Organisation": {
            "types": "object",
            "properties": {
                "active": {
                    "types": "boolean"
                },
                "admins": {
                    "types": "array",
                    "items": {
                        "types": "string"
                    }
                },
                "contact": {
                    "$ref": "#/definitions/model.Contact"
                },
                "created_at": {
                    "types": "string"
                },
                "creator_id": {
                    "types": "string"
                },
                "description": {
                    "types": "string"
                },
                "expiry_date": {
                    "types": "string"
                },
                "founding_date": {
                    "types": "string"
                },
                "geo_location": {
                    "$ref": "#/definitions/model.Location"
                },
                "id": {
                    "types": "string"
                },
                "logo_url": {
                    "types": "string"
                },
                "organisation_name": {
                    "types": "string"
                },
                "organisation_size": {
                    "types": "string"
                },
                "products": {
                    "types": "array",
                    "items": {
                        "types": "string"
                    }
                },
                "rating": {
                    "types": "number"
                },
                "registration_number": {
                    "types": "string"
                },
                "services": {
                    "types": "array",
                    "items": {
                        "types": "string"
                    }
                },
                "updated_at": {
                    "types": "string"
                },
                "website": {
                    "types": "string"
                }
            }
        },
        "model.PhoneDetails": {
            "types": "object",
            "properties": {
                "country_code": {
                    "types": "string"
                },
                "phone_number": {
                    "types": "string"
                },
                "types": {
                    "types": "string"
                }
            }
        },
        "utils.Response": {
            "types": "object",
            "properties": {
                "code": {
                    "types": "string"
                },
                "message": {
                    "types": "string"
                },
                "status": {
                    "types": "boolean"
                }
            }
        },
        "utils.ResponseObj": {
            "types": "object",
            "properties": {
                "code": {
                    "types": "string"
                },
                "data": {},
                "message": {
                    "types": "string"
                },
                "status": {
                    "types": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "types": "basic"
        }
    }
}`

// SwaggerInfo_swagger holds exported Swagger Info so clients can modify it
var SwaggerInfo_swagger = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/directory/api/v1",
	Schemes:          []string{},
	Title:            "Business directory API",
	Description:      "This is the API for business directory api..",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate_swagger,
}

func init() {
	swag.Register(SwaggerInfo_swagger.InstanceName(), SwaggerInfo_swagger)
}
